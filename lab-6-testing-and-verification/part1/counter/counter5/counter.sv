/* Generated by Yosys 0.45 (git sha1 9ed031ddd, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3) */

(* top =  1  *)
(* \library  = "work" *)
(* hdlname = "counter" *)
(* src = "counter.sv:2.8-2.15" *)
module counter(reset_i, up_i, down_i, count_o, clk_i);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  (* src = "counter.sv:4.17-4.22" *)
  input clk_i;
  wire clk_i;
  (* src = "counter.sv:8.26-8.33" *)
  output [3:0] count_o;
  wire [3:0] count_o;
  (* src = "counter.sv:11.29-11.38" *)
  wire [3:0] counter_n;
  (* src = "counter.sv:10.29-10.38" *)
  reg [3:0] counter_r;
  (* src = "counter.sv:7.17-7.23" *)
  input down_i;
  wire down_i;
  (* src = "counter.sv:5.17-5.24" *)
  input reset_i;
  wire reset_i;
  (* src = "counter.sv:6.17-6.21" *)
  input up_i;
  wire up_i;
  assign _00_ = down_i ^ counter_r[0];
  assign _01_ = ~(down_i ^ counter_r[0]);
  assign counter_n[0] = up_i ? _01_ : _00_;
  assign _02_ = ~(counter_r[1] ^ counter_r[0]);
  assign _03_ = down_i ? _02_ : counter_r[1];
  assign _04_ = counter_r[1] ^ counter_r[0];
  assign _05_ = down_i ? counter_r[1] : _04_;
  assign counter_n[1] = up_i ? _05_ : _03_;
  assign _06_ = ~counter_r[2];
  assign _07_ = counter_r[1] | counter_r[0];
  assign _08_ = _07_ ^ _06_;
  assign _09_ = down_i ? _08_ : counter_r[2];
  assign _10_ = ~(counter_r[1] & counter_r[0]);
  assign _11_ = _10_ ^ _06_;
  assign _12_ = down_i ? counter_r[2] : _11_;
  assign counter_n[2] = up_i ? _12_ : _09_;
  assign _13_ = _06_ & ~(_07_);
  assign _14_ = _13_ ^ counter_r[3];
  assign _15_ = down_i ? _14_ : counter_r[3];
  assign _16_ = counter_r[2] & ~(_10_);
  assign _17_ = _16_ ^ counter_r[3];
  assign _18_ = down_i ? counter_r[3] : _17_;
  assign counter_n[3] = up_i ? _18_ : _15_;
  (* src = "counter.sv:14.6-18.9" *)
  always @(posedge clk_i, posedge reset_i)
    if (reset_i) counter_r[0] <= 1'h0;
    else if (!reset_i) counter_r[0] <= counter_n[0];
  (* src = "counter.sv:14.6-18.9" *)
  always @(posedge clk_i, posedge reset_i)
    if (reset_i) counter_r[1] <= 1'h0;
    else if (!reset_i) counter_r[1] <= counter_n[1];
  (* src = "counter.sv:14.6-18.9" *)
  always @(posedge clk_i, posedge reset_i)
    if (reset_i) counter_r[2] <= 1'h0;
    else if (!reset_i) counter_r[2] <= counter_n[2];
  (* src = "counter.sv:14.6-18.9" *)
  always @(posedge clk_i, posedge reset_i)
    if (reset_i) counter_r[3] <= 1'h0;
    else if (!reset_i) counter_r[3] <= counter_n[3];
  assign count_o = counter_r;
endmodule
