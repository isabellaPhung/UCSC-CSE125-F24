/* Generated by Yosys 0.39 (git sha1 00338082b, aarch64-apple-darwin21.4-clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* top =  1  *)
(* hdlname = "counter" *)
(* src = "counter.soln.sv:1.8-1.15" *)
module counter(reset_i, up_i, down_i, count_o, clk_i);
  (* unused_bits = "4" *)
  wire [4:0] _00_;
  wire [3:0] _01_;
  wire _02_;
  wire [3:0] _03_;
  wire [3:0] _04_;
  wire [3:0] _05_;
  (* src = "counter.soln.sv:8.17-8.22" *)
  input clk_i;
  wire clk_i;
  (* src = "counter.soln.sv:12.26-12.33" *)
  output [3:0] count_o;
  wire [3:0] count_o;
  (* src = "counter.soln.sv:15.29-15.38" *)
  wire [3:0] counter_n;
  (* src = "counter.soln.sv:14.29-14.38" *)
  reg [3:0] counter_r;
  (* src = "counter.soln.sv:11.17-11.23" *)
  input down_i;
  wire down_i;
  (* src = "counter.soln.sv:9.17-9.24" *)
  input reset_i;
  wire reset_i;
  (* src = "counter.soln.sv:10.17-10.21" *)
  input up_i;
  wire up_i;
  assign _03_ = counter_r + (* src = "counter.soln.sv:32.21-32.34" *) 1'h1;
  (* src = "counter.soln.sv:17.11-23.7" *)
  always @(posedge clk_i)
    counter_r <= _01_;
  assign _02_ = up_i & (* src = "counter.soln.sv:27.10-27.23" *) down_i;
  assign _04_ = down_i ? (* src = "counter.soln.sv:31.12-32.35" *) _03_ : counter_r;
  assign _05_ = up_i ? (* src = "counter.soln.sv:29.12-32.35" *) _00_[3:0] : _04_;
  assign counter_n = _02_ ? (* src = "counter.soln.sv:27.7-32.35" *) counter_r : _05_;
  assign _01_ = reset_i ? (* src = "counter.soln.sv:18.6-22.9" *) 4'hf : counter_n;
  assign _00_[3:0] = counter_r - (* src = "counter.soln.sv:30.21-30.34" *) 1'h1;
  assign count_o = counter_r;
endmodule
